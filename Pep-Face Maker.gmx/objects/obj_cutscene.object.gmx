<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create your cutscene in the object creation code!
//Look at the creation code in the example rooms for instructions!
alarm[0] = 30;
wait = 1;
name = "";
data = 0;
data2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is what executes the cutscene.
//Add a new case if you want to have your own events too!
wait = 1;
if ds_list_empty(list)
    exit;
move = ds_list_find_value(list,0);
ds_list_delete(list,0);
switch move
{
    case "Turn":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        data = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(0);
        break;
    case "Walk":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        data = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(2);
        break;
    case "WalkPixels":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        data = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        data2 = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(1);
        wait = 0;
        break;
    case "Stop":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(6);
        break;
    case "Jump":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(3);
        break;
    case "Hop":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(4);
        break;
    case "View":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(5);
        break;
    case "Wait":
        wait = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        break;
    case "Sound":
        sound_play(ds_list_find_value(list,0));
        ds_list_delete(list,0);
        break;
    case "Music":
        sound_loop(ds_list_find_value(list,0));
        ds_list_delete(list,0);
        break;
    case "Message":
        scr_message(ds_list_find_value(list,0));
        ds_list_delete(list,0);
        break;
    case "Room":
        room_goto(ds_list_find_value(list,0));
        exit;
        break;
     case "Explode":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(7);
        break;     
     case "Despawn":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(8);
        break; 
     case "JumpScat":
        name = ds_list_find_value(list,0);
        ds_list_delete(list,0);
        with obj_character event_user(9);
        break;             
}
alarm[0] = wait;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
